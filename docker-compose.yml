version: "3.7"

networks:
  kafka_network:
    driver: bridge

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: kafka-zookeeper
    ports:
      - "2181:2181" # Zookeeper port
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.3
    container_name: kafka-broker
    ports:
      - "9092:9092" # Kafka broker port
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  # app:
  #   build: .
  #   container_name: payment_gateway_app
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #     - postgres
  #     - redis
  #   environment:
  #     - DATABASE_URL=postgres://user:password@postgres:5432/payments?sslmode=disable
  #     - KAFKA_BROKER_URL=kafka-like:9092
  #     - DB_USER=user
  #     - DB_PASSWORD=password
  #     - DB_NAME=payments
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #   command: ["/app/main"]
  #   networks:
  #     - kafka_network

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=payments
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kafka_network
 

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=password 
    networks:
      - kafka_network 


volumes:
  kafka-volume:
  zookeeper-volume: